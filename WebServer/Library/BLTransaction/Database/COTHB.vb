''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : COTHB.vb
' Class         : COTHB
' Description   : Table : OTHB, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: COTHB.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class COTHB
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property BankCode As String
    Public Property BranchCode As String
    Public Property BranchFullName As String
    Public Property BranchShortName As String

    Public Sub New()
        BankCode = ""
        BranchCode = ""
        BranchFullName = ""
        BranchShortName = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As COTHBStruct)
        DBStruct.BankCode = BankCode
        DBStruct.BranchCode = BranchCode
    End Sub

    Private Sub ToSql(ByRef DBStruct As COTHBStruct)
        ToSqlPK(DBStruct)
        DBStruct.BranchFullName = BranchFullName
        DBStruct.BranchShortName = BranchShortName
    End Sub

    Private Sub FromSql(ByVal DBStruct As COTHBStruct)
        BankCode = DBStruct.BankCode
        BranchCode = DBStruct.BranchCode
        BranchFullName = DBStruct.BranchFullName
        BranchShortName = DBStruct.BranchShortName
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COTHBStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COTHBStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COTHBStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BankCode As String, _
                    ByVal BranchCode As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New COTHBStruct
        Me.BankCode = BankCode
        Me.BranchCode = BranchCode
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of COTHB))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As COTHBStruct In StructObjList
            Dim Obj As New COTHB
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchgetBranchFullName(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BankCode As String, _
                    ByVal BranchCode As String, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New COTHBStruct
        StructObj.BankCode = BankCode
        StructObj.BranchCode = BranchCode
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchgetBranchFullName(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New COTHBStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "OTHB"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim OTHB As New COTHB
        OTHB.BankCode = BankCode
        OTHB.BranchCode = BranchCode
        OTHB.BranchFullName = BranchFullName
        OTHB.BranchShortName = BranchShortName
        Return OTHB
    End Function



End Class

