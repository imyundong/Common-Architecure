''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : COverrideList.vb
' Class         : COverrideList
' Description   : Table : OverrideList, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: COverrideList.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class COverrideList
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property TxnCode As String
    Public Property BranchCategory As Integer
    Public Property TellerRole As Integer
    Public Property OverrideCode As String

    Public Sub New()
        TxnCode = ""
        BranchCategory = 0
        TellerRole = 0
        OverrideCode = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As COverrideListStruct)
        DBStruct.TxnCode = TxnCode
        DBStruct.BranchCategory = BranchCategory
        DBStruct.TellerRole = TellerRole
        DBStruct.OverrideCode = OverrideCode
    End Sub

    Private Sub ToSql(ByRef DBStruct As COverrideListStruct)
        ToSqlPK(DBStruct)
    End Sub

    Private Sub FromSql(ByVal DBStruct As COverrideListStruct)
        TxnCode = DBStruct.TxnCode
        BranchCategory = DBStruct.BranchCategory
        TellerRole = DBStruct.TellerRole
        OverrideCode = DBStruct.OverrideCode
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Remove(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal TxnCode As String, _
                    ByVal BranchCategory As Integer, _
                    ByVal TellerRole As Integer, _
                    ByVal OverrideCode As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New COverrideListStruct
        Me.TxnCode = TxnCode
        Me.BranchCategory = BranchCategory
        Me.TellerRole = TellerRole
        Me.OverrideCode = OverrideCode
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Shared Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of COverrideList))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary("OverrideList")

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As COverrideListStruct In StructObjList
            Dim Obj As New COverrideList
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New COverrideListStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "OverrideList"
        End Get
    End Property

    Public Overridable Function Clone() As Object Implements ICloneable.Clone
        Dim OverrideList As New COverrideList
        OverrideList.TxnCode = TxnCode
        OverrideList.BranchCategory = BranchCategory
        OverrideList.TellerRole = TellerRole
        OverrideList.OverrideCode = OverrideCode
        Return OverrideList
    End Function

#Region "User Defined Code"
    ''' <summary>
    ''' Match
    ''' </summary>
    ''' <param name="TxnCode"></param>
    ''' <param name="BranchCategory"></param>
    ''' <param name="TellerRole"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Match(TxnCode As String, BranchCategory As Integer, TellerRole As Integer) As Boolean
        If Me.TxnCode.ToUpper = TxnCode.ToUpper Then
            If Me.BranchCategory = 0 Or Me.BranchCategory = BranchCategory Then
                If Me.TellerRole = 0 Or Me.TellerRole = TellerRole Then
                    Return True
                End If
            End If
        End If

        Return False
    End Function
#End Region


End Class

