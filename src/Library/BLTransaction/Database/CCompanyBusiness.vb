''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CCompanyBusiness.vb
' Class         : CCompanyBusiness
' Description   : Table : CompanyBusiness, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CCompanyBusiness.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CCompanyBusiness
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property PayrollCode As String
    Public Property CompanyId As String
    Public Property CompanyName As String
    Public Property TransactionType As String

    Public Sub New()
        PayrollCode = ""
        CompanyId = ""
        CompanyName = ""
        TransactionType = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CCompanyBusinessStruct)
        DBStruct.PayrollCode = PayrollCode
    End Sub

    Private Sub ToSql(ByRef DBStruct As CCompanyBusinessStruct)
        ToSqlPK(DBStruct)
        DBStruct.CompanyId = CompanyId
        DBStruct.CompanyName = CompanyName
        DBStruct.TransactionType = TransactionType
    End Sub

    Private Sub FromSql(ByVal DBStruct As CCompanyBusinessStruct)
        PayrollCode = DBStruct.PayrollCode
        CompanyId = DBStruct.CompanyId
        CompanyName = DBStruct.CompanyName
        TransactionType = DBStruct.TransactionType
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CCompanyBusinessStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CCompanyBusinessStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CCompanyBusinessStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal PayrollCode As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CCompanyBusinessStruct
        Me.PayrollCode = PayrollCode
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CCompanyBusiness))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CCompanyBusinessStruct In StructObjList
            Dim Obj As New CCompanyBusiness
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchByPayrollCode(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal CompanyId As String, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New CCompanyBusinessStruct
        StructObj.CompanyId = CompanyId
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchByPayrollCode(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CCompanyBusinessStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "CompanyBusiness"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim CompanyBusiness As New CCompanyBusiness
        CompanyBusiness.PayrollCode = PayrollCode
        CompanyBusiness.CompanyId = CompanyId
        CompanyBusiness.CompanyName = CompanyName
        CompanyBusiness.TransactionType = TransactionType
        Return CompanyBusiness
    End Function



End Class

