''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CBranchST.vb
' Class         : CBranchST
' Description   : Table : BranchST, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CBranchST.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CBranchST
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property BANKCD As String
    Public Property BRANCHCD As String
    Public Property UNIONBALANCINGSTATUS As String
    Public Property BALANCINGSTATUS As String
    Public Property BUSINESSDATE As String
    Public Property REMITTANCESTATUS As String
    Public Property FRXBALANCINGSTATUS As String

    Public Sub New()
        BANKCD = ""
        BRANCHCD = ""
        UNIONBALANCINGSTATUS = ""
        BALANCINGSTATUS = ""
        BUSINESSDATE = ""
        REMITTANCESTATUS = ""
        FRXBALANCINGSTATUS = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CBranchSTStruct)
        DBStruct.BANKCD = BANKCD
        DBStruct.BRANCHCD = BRANCHCD
    End Sub

    Private Sub ToSql(ByRef DBStruct As CBranchSTStruct)
        ToSqlPK(DBStruct)
        DBStruct.UNIONBALANCINGSTATUS = UNIONBALANCINGSTATUS
        DBStruct.BALANCINGSTATUS = BALANCINGSTATUS
        DBStruct.BUSINESSDATE = BUSINESSDATE
        DBStruct.REMITTANCESTATUS = REMITTANCESTATUS
        DBStruct.FRXBALANCINGSTATUS = FRXBALANCINGSTATUS
    End Sub

    Private Sub FromSql(ByVal DBStruct As CBranchSTStruct)
        BANKCD = DBStruct.BANKCD
        BRANCHCD = DBStruct.BRANCHCD
        UNIONBALANCINGSTATUS = DBStruct.UNIONBALANCINGSTATUS
        BALANCINGSTATUS = DBStruct.BALANCINGSTATUS
        BUSINESSDATE = DBStruct.BUSINESSDATE
        REMITTANCESTATUS = DBStruct.REMITTANCESTATUS
        FRXBALANCINGSTATUS = DBStruct.FRXBALANCINGSTATUS
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBranchSTStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBranchSTStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBranchSTStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BANKCD As String, _
                    ByVal BRANCHCD As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CBranchSTStruct
        Me.BANKCD = BANKCD
        Me.BRANCHCD = BRANCHCD
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CBranchST))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CBranchSTStruct In StructObjList
            Dim Obj As New CBranchST
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchByAllStatus(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BRANCHCD As String, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New CBranchSTStruct
        StructObj.BRANCHCD = BRANCHCD
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchByAllStatus(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CBranchSTStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "BranchST"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim BranchST As New CBranchST
        BranchST.BANKCD = BANKCD
        BranchST.BRANCHCD = BRANCHCD
        BranchST.UNIONBALANCINGSTATUS = UNIONBALANCINGSTATUS
        BranchST.BALANCINGSTATUS = BALANCINGSTATUS
        BranchST.BUSINESSDATE = BUSINESSDATE
        BranchST.REMITTANCESTATUS = REMITTANCESTATUS
        BranchST.FRXBALANCINGSTATUS = FRXBALANCINGSTATUS
        Return BranchST
    End Function



End Class

