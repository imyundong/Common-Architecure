''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CBroadcastNotification.vb
' Class         : CBroadcastNotification
' Description   : Table : BroadcastNotification, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CBroadcastNotification.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CBroadcastNotification
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property TellerID As String
    Public Property Sender As Integer
    Public Property SystemDate As DateTime

    Public Sub New()
        TellerID = ""
        Sender = 0
        SystemDate = Now()
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CBroadcastNotificationStruct)
    End Sub

    Private Sub ToSql(ByRef DBStruct As CBroadcastNotificationStruct)
        ToSqlPK(DBStruct)
        DBStruct.TellerID = TellerID
        DBStruct.Sender = Sender
        DBStruct.SystemDate = SystemDate
    End Sub

    Private Sub FromSql(ByVal DBStruct As CBroadcastNotificationStruct)
        TellerID = DBStruct.TellerID
        Sender = DBStruct.Sender
        SystemDate = DBStruct.SystemDate
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBroadcastNotificationStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBroadcastNotificationStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBroadcastNotificationStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CBroadcastNotificationStruct
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CBroadcastNotification))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CBroadcastNotificationStruct In StructObjList
            Dim Obj As New CBroadcastNotification
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CBroadcastNotificationStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "BroadcastNotification"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim BroadcastNotification As New CBroadcastNotification
        BroadcastNotification.TellerID = TellerID
        BroadcastNotification.Sender = Sender
        BroadcastNotification.SystemDate = SystemDate
        Return BroadcastNotification
    End Function



End Class

