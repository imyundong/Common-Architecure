''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CBGLACCOUNTPR.vb
' Class         : CBGLACCOUNTPR
' Description   : Table : BGLACCOUNTPR, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CBGLACCOUNTPR.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CBGLACCOUNTPR
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property BRANCHCD As String
    Public Property ACCOUNT As String
    Public Property CANELMARK As Char
    Public Property ZEROMARK As Char

    Public Sub New()
        BRANCHCD = ""
        ACCOUNT = ""
        CANELMARK = " "
        ZEROMARK = " "
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CBGLACCOUNTPRStruct)
        DBStruct.BRANCHCD = BRANCHCD
        DBStruct.ACCOUNT = ACCOUNT
    End Sub

    Private Sub ToSql(ByRef DBStruct As CBGLACCOUNTPRStruct)
        ToSqlPK(DBStruct)
        DBStruct.CANELMARK = CANELMARK
        DBStruct.ZEROMARK = ZEROMARK
    End Sub

    Private Sub FromSql(ByVal DBStruct As CBGLACCOUNTPRStruct)
        BRANCHCD = DBStruct.BRANCHCD
        ACCOUNT = DBStruct.ACCOUNT
        CANELMARK = DBStruct.CANELMARK
        ZEROMARK = DBStruct.ZEROMARK
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBGLACCOUNTPRStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBGLACCOUNTPRStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CBGLACCOUNTPRStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BRANCHCD As String, _
                    ByVal ACCOUNT As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CBGLACCOUNTPRStruct
        Me.BRANCHCD = BRANCHCD
        Me.ACCOUNT = ACCOUNT
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CBGLACCOUNTPR))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CBGLACCOUNTPRStruct In StructObjList
            Dim Obj As New CBGLACCOUNTPR
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchByACCOUNT(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal BRANCHCD As String, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New CBGLACCOUNTPRStruct
        StructObj.BRANCHCD = BRANCHCD
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchByACCOUNT(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CBGLACCOUNTPRStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "BGLACCOUNTPR"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim BGLACCOUNTPR As New CBGLACCOUNTPR
        BGLACCOUNTPR.BRANCHCD = BRANCHCD
        BGLACCOUNTPR.ACCOUNT = ACCOUNT
        BGLACCOUNTPR.CANELMARK = CANELMARK
        BGLACCOUNTPR.ZEROMARK = ZEROMARK
        Return BGLACCOUNTPR
    End Function



End Class

