''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CHostTellerMapping.vb
' Class         : CHostTellerMapping
' Description   : Table : HostTellerMapping, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CHostTellerMapping.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CHostTellerMapping
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property UserId As Integer
    Public Property HostId As Integer
    Public Property HostTeller As String

    Public Sub New()
        UserId = 0
        HostId = 0
        HostTeller = "0"
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CHostTellerMappingStruct)
        DBStruct.UserId = UserId
        DBStruct.HostId = HostId
    End Sub

    Private Sub ToSql(ByRef DBStruct As CHostTellerMappingStruct)
        ToSqlPK(DBStruct)
        DBStruct.HostTeller = HostTeller
    End Sub

    Private Sub FromSql(ByVal DBStruct As CHostTellerMappingStruct)
        UserId = DBStruct.UserId
        HostId = DBStruct.HostId
        HostTeller = DBStruct.HostTeller
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CHostTellerMappingStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CHostTellerMappingStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CHostTellerMappingStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Remove(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal UserId As Integer, _
                    ByVal HostId As Integer, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CHostTellerMappingStruct
        Me.UserId = UserId
        Me.HostId = HostId
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Shared Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CHostTellerMapping))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary("HostTellerMapping")

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CHostTellerMappingStruct In StructObjList
            Dim Obj As New CHostTellerMapping
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CHostTellerMappingStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "HostTellerMapping"
        End Get
    End Property

    Public Overridable Function Clone() As Object Implements ICloneable.Clone
        Dim HostTellerMapping As New CHostTellerMapping
        HostTellerMapping.UserId = UserId
        HostTellerMapping.HostId = HostId
        HostTellerMapping.HostTeller = HostTeller
        Return HostTellerMapping
    End Function



End Class

