''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CTxnParameter.vb
' Class         : CTxnParameter
' Description   : Table : TxnParameter, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CTxnParameter.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CTxnParameter
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property TxnCode As String
    Public Property Description As String
    Public Property Journalise As Integer
    Public Property Host As Integer
    Public Property IsReversal As Integer
    Public Property ReversalTxn As String
    Public Property TxnPath As Integer
    Public Property TxnIcon As Integer
    Public Property HostTxnCode As String

    Public Sub New()
        TxnCode = ""
        Description = ""
        Journalise = 0
        Host = 0
        IsReversal = 0
        ReversalTxn = "0"
        TxnPath = -1
        TxnIcon = 0
        HostTxnCode = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CTxnParameterStruct)
        DBStruct.TxnCode = TxnCode
    End Sub

    Private Sub ToSql(ByRef DBStruct As CTxnParameterStruct)
        ToSqlPK(DBStruct)
        DBStruct.Description = Description
        DBStruct.Journalise = Journalise
        DBStruct.Host = Host
        DBStruct.IsReversal = IsReversal
        DBStruct.ReversalTxn = ReversalTxn
        DBStruct.TxnPath = TxnPath
        DBStruct.TxnIcon = TxnIcon
        DBStruct.HostTxnCode = HostTxnCode
    End Sub

    Private Sub FromSql(ByVal DBStruct As CTxnParameterStruct)
        TxnCode = DBStruct.TxnCode
        Description = DBStruct.Description
        Journalise = DBStruct.Journalise
        Host = DBStruct.Host
        IsReversal = DBStruct.IsReversal
        ReversalTxn = DBStruct.ReversalTxn
        TxnPath = DBStruct.TxnPath
        TxnIcon = DBStruct.TxnIcon
        HostTxnCode = DBStruct.HostTxnCode
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CTxnParameterStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CTxnParameterStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CTxnParameterStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Remove(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal TxnCode As String, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CTxnParameterStruct
        Me.TxnCode = TxnCode
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Shared Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CTxnParameter))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary("TxnParameter")

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CTxnParameterStruct In StructObjList
            Dim Obj As New CTxnParameter
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CTxnParameterStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "TxnParameter"
        End Get
    End Property

    Public Overridable Function Clone() As Object Implements ICloneable.Clone
        Dim TxnParameter As New CTxnParameter
        TxnParameter.TxnCode = TxnCode
        TxnParameter.Description = Description
        TxnParameter.Journalise = Journalise
        TxnParameter.Host = Host
        TxnParameter.IsReversal = IsReversal
        TxnParameter.ReversalTxn = ReversalTxn
        TxnParameter.TxnPath = TxnPath
        TxnParameter.TxnIcon = TxnIcon
        TxnParameter.HostTxnCode = HostTxnCode
        Return TxnParameter
    End Function



End Class

