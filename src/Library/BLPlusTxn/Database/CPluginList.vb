''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CPluginList.vb
' Class         : CPluginList
' Description   : Table : PluginList, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CPluginList.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CPluginList
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property PluginId As Integer
    Public Property PluginName As String
    Public Property PluginFriendlyName As String
    Public Property PluginIcon As Integer

    Public Sub New()
        PluginId = 0
        PluginName = ""
        PluginFriendlyName = ""
        PluginIcon = 0
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CPluginListStruct)
        DBStruct.PluginId = PluginId
    End Sub

    Private Sub ToSql(ByRef DBStruct As CPluginListStruct)
        ToSqlPK(DBStruct)
        DBStruct.PluginName = PluginName
        DBStruct.PluginFriendlyName = PluginFriendlyName
        DBStruct.PluginIcon = PluginIcon
    End Sub

    Private Sub FromSql(ByVal DBStruct As CPluginListStruct)
        PluginId = DBStruct.PluginId
        PluginName = DBStruct.PluginName
        PluginFriendlyName = DBStruct.PluginFriendlyName
        PluginIcon = DBStruct.PluginIcon
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CPluginListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CPluginListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CPluginListStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Remove(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal PluginId As Integer, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CPluginListStruct
        Me.PluginId = PluginId
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Shared Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CPluginList))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary("PluginList")

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CPluginListStruct In StructObjList
            Dim Obj As New CPluginList
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CPluginListStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "PluginList"
        End Get
    End Property

    Public Overridable Function Clone() As Object Implements ICloneable.Clone
        Dim PluginList As New CPluginList
        PluginList.PluginId = PluginId
        PluginList.PluginName = PluginName
        PluginList.PluginFriendlyName = PluginFriendlyName
        PluginList.PluginIcon = PluginIcon
        Return PluginList
    End Function

#Region "User Defined Code"
    Property Available As Boolean = False
#End Region


End Class

