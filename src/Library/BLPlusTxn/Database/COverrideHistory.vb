''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : COverrideHistory.vb
' Class         : COverrideHistory
' Description   : Table : OverrideHistory, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: COverrideHistory.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class COverrideHistory
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property SequenceNo As Integer
    Public Property OverrideId As String
    Public Property OverrideCode As String
    Public Property UserId As Integer
    Public Property SupervisorId As Integer
    Public Property Status As Integer
    Public Property RequestDate As DateTime
    Public Property UpdateDate As DateTime

    Public Sub New()
        SequenceNo = 
        OverrideId = ""
        OverrideCode = ""
        UserId = 0
        SupervisorId = 0
        Status = 0
        RequestDate = Now()
        UpdateDate = Now()
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As COverrideHistoryStruct)
        DBStruct.SequenceNo = SequenceNo
    End Sub

    Private Sub ToSql(ByRef DBStruct As COverrideHistoryStruct)
        ToSqlPK(DBStruct)
        DBStruct.OverrideId = OverrideId
        DBStruct.OverrideCode = OverrideCode
        DBStruct.UserId = UserId
        DBStruct.SupervisorId = SupervisorId
        DBStruct.Status = Status
        DBStruct.RequestDate = RequestDate
        DBStruct.UpdateDate = UpdateDate
    End Sub

    Private Sub FromSql(ByVal DBStruct As COverrideHistoryStruct)
        SequenceNo = DBStruct.SequenceNo
        OverrideId = DBStruct.OverrideId
        OverrideCode = DBStruct.OverrideCode
        UserId = DBStruct.UserId
        SupervisorId = DBStruct.SupervisorId
        Status = DBStruct.Status
        RequestDate = DBStruct.RequestDate
        UpdateDate = DBStruct.UpdateDate
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideHistoryStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
        SequenceNo = StructObj.SequenceNo
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideHistoryStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New COverrideHistoryStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Remove(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal SequenceNo As Integer, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New COverrideHistoryStruct
        Me.SequenceNo = SequenceNo
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Shared Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of COverrideHistory))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary("OverrideHistory")

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As COverrideHistoryStruct In StructObjList
            Dim Obj As New COverrideHistory
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchByOverrideId(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal OverrideId As String, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New COverrideHistoryStruct
        StructObj.OverrideId = OverrideId
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchByOverrideId(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New COverrideHistoryStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "OverrideHistory"
        End Get
    End Property

    Public Overridable Function Clone() As Object Implements ICloneable.Clone
        Dim OverrideHistory As New COverrideHistory
        OverrideHistory.SequenceNo = SequenceNo
        OverrideHistory.OverrideId = OverrideId
        OverrideHistory.OverrideCode = OverrideCode
        OverrideHistory.UserId = UserId
        OverrideHistory.SupervisorId = SupervisorId
        OverrideHistory.Status = Status
        OverrideHistory.RequestDate = RequestDate
        OverrideHistory.UpdateDate = UpdateDate
        Return OverrideHistory
    End Function



End Class

