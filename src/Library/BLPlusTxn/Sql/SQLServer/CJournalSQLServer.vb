''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CJournal.vb
' Class         : CJournal
' Description   : Table    Journal
'               : Database SQLServer
'               : This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CJournal.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow.CError

Public Class CJournalSQLServer
    Inherits CJournalStruct
    Implements IDatabaseAccess
    Implements IComponent

    Public Sub Insert(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Insert

        Dim StructObj As CJournalStruct = TryCast(Obj, CJournalStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" INSERT INTO Journal ")
        SQL.Append("    ( ")
        SQL.Append("    [GroupId], ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Status], ")
        SQL.Append("    [ErrCode], ")
        SQL.Append("    [ErrDescription], ")
        SQL.Append("    [HostId], ")
        SQL.Append("    [TraceNo], ")
        SQL.Append("    [SystemDate], ")
        SQL.Append("    [BusinessDate], ")
        SQL.Append("    [UserId], ")
        SQL.Append("    [BranchId], ")
        SQL.Append("    [Supervisor], ")
        SQL.Append("    [Account], ")
        SQL.Append("    [Amount], ")
        SQL.Append("    [Currency], ")
        SQL.Append("    [Request], ")
        SQL.Append("    [Response], ")
        SQL.Append("    [Terminal], ")
        SQL.Append("    [ProcTime], ")
        SQL.Append("    [PageData], ")
        SQL.Append("    [OverrideId]) ")
        SQL.Append(" VALUES ")
        SQL.Append("    ( ")
        SQL.Append("    @GroupId, ")
        SQL.Append("    @TxnCode, ")
        SQL.Append("    @Status, ")
        SQL.Append("    @ErrCode, ")
        SQL.Append("    @ErrDescription, ")
        SQL.Append("    @HostId, ")
        SQL.Append("    @TraceNo, ")
        SQL.Append("    @SystemDate, ")
        SQL.Append("    @BusinessDate, ")
        SQL.Append("    @UserId, ")
        SQL.Append("    @BranchId, ")
        SQL.Append("    @Supervisor, ")
        SQL.Append("    @Account, ")
        SQL.Append("    @Amount, ")
        SQL.Append("    @Currency, ")
        SQL.Append("    @Request, ")
        SQL.Append("    @Response, ")
        SQL.Append("    @Terminal, ")
        SQL.Append("    @ProcTime, ")
        SQL.Append("    @PageData, ")
        SQL.Append("    @OverrideId) ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command()

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("JournalId", StructObj.JournalId)
        Command.Parameters.AddWithValue("GroupId", StructObj.GroupId)
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)
        Command.Parameters.AddWithValue("Status", StructObj.Status)
        Command.Parameters.AddWithValue("ErrCode", StructObj.ErrCode)
        Command.Parameters.AddWithValue("ErrDescription", StructObj.ErrDescription)
        Command.Parameters.AddWithValue("HostId", StructObj.HostId)
        Command.Parameters.AddWithValue("TraceNo", StructObj.TraceNo)
        Command.Parameters.AddWithValue("SystemDate", StructObj.SystemDate)
        Command.Parameters.AddWithValue("BusinessDate", StructObj.BusinessDate)
        Command.Parameters.AddWithValue("UserId", StructObj.UserId)
        Command.Parameters.AddWithValue("BranchId", StructObj.BranchId)
        Command.Parameters.AddWithValue("Supervisor", StructObj.Supervisor)
        Command.Parameters.AddWithValue("Account", StructObj.Account)
        Command.Parameters.AddWithValue("Amount", StructObj.Amount)
        Command.Parameters.AddWithValue("Currency", StructObj.Currency)
        Command.Parameters.AddWithValue("Request", StructObj.Request)
        Command.Parameters.AddWithValue("Response", StructObj.Response)
        Command.Parameters.AddWithValue("Terminal", StructObj.Terminal)
        Command.Parameters.AddWithValue("ProcTime", StructObj.ProcTime)
        Command.Parameters.AddWithValue("PageData", StructObj.PageData)
        Command.Parameters.AddWithValue("OverrideId", StructObj.OverrideId)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_INSERT_FAIL, "0 Record Inserted")
            End If
            Command = Adapter.Command()
            Command.CommandText = "SELECT @@Identity"
            Dim Identity As Integer = Command.ExecuteScalar()
         StructObj.JournalId = Identity
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_INSERT_FAIL, ex)
        End Try
    End Sub

    Public Sub Update(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Update

        Dim StructObj As CJournalStruct = TryCast(Obj, CJournalStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" UPDATE Journal ")
        SQL.Append(" SET ")
        SQL.Append("     [GroupId] = @GroupId, ")
        SQL.Append("     [TxnCode] = @TxnCode, ")
        SQL.Append("     [Status] = @Status, ")
        SQL.Append("     [ErrCode] = @ErrCode, ")
        SQL.Append("     [ErrDescription] = @ErrDescription, ")
        SQL.Append("     [HostId] = @HostId, ")
        SQL.Append("     [TraceNo] = @TraceNo, ")
        SQL.Append("     [SystemDate] = @SystemDate, ")
        SQL.Append("     [BusinessDate] = @BusinessDate, ")
        SQL.Append("     [UserId] = @UserId, ")
        SQL.Append("     [BranchId] = @BranchId, ")
        SQL.Append("     [Supervisor] = @Supervisor, ")
        SQL.Append("     [Account] = @Account, ")
        SQL.Append("     [Amount] = @Amount, ")
        SQL.Append("     [Currency] = @Currency, ")
        SQL.Append("     [Request] = @Request, ")
        SQL.Append("     [Response] = @Response, ")
        SQL.Append("     [Terminal] = @Terminal, ")
        SQL.Append("     [ProcTime] = @ProcTime, ")
        SQL.Append("     [PageData] = @PageData, ")
        SQL.Append("     [OverrideId] = @OverrideId ")
        SQL.Append(" WHERE ")
        SQL.Append("     [JournalId] = @JournalId ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command()

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("JournalId", StructObj.JournalId)
        Command.Parameters.AddWithValue("GroupId", StructObj.GroupId)
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)
        Command.Parameters.AddWithValue("Status", StructObj.Status)
        Command.Parameters.AddWithValue("ErrCode", StructObj.ErrCode)
        Command.Parameters.AddWithValue("ErrDescription", StructObj.ErrDescription)
        Command.Parameters.AddWithValue("HostId", StructObj.HostId)
        Command.Parameters.AddWithValue("TraceNo", StructObj.TraceNo)
        Command.Parameters.AddWithValue("SystemDate", StructObj.SystemDate)
        Command.Parameters.AddWithValue("BusinessDate", StructObj.BusinessDate)
        Command.Parameters.AddWithValue("UserId", StructObj.UserId)
        Command.Parameters.AddWithValue("BranchId", StructObj.BranchId)
        Command.Parameters.AddWithValue("Supervisor", StructObj.Supervisor)
        Command.Parameters.AddWithValue("Account", StructObj.Account)
        Command.Parameters.AddWithValue("Amount", StructObj.Amount)
        Command.Parameters.AddWithValue("Currency", StructObj.Currency)
        Command.Parameters.AddWithValue("Request", StructObj.Request)
        Command.Parameters.AddWithValue("Response", StructObj.Response)
        Command.Parameters.AddWithValue("Terminal", StructObj.Terminal)
        Command.Parameters.AddWithValue("ProcTime", StructObj.ProcTime)
        Command.Parameters.AddWithValue("PageData", StructObj.PageData)
        Command.Parameters.AddWithValue("OverrideId", StructObj.OverrideId)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, "0 Record Updated")
            End If
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, ex)
        End Try
    End Sub

    Public Sub Remove(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Remove

        Dim StructObj As CJournalStruct = TryCast(Obj, CJournalStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" DELETE FROM Journal ")
        SQL.Append(" WHERE ")
        SQL.Append("     [JournalId] = @JournalId ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("JournalId", StructObj.JournalId)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, "0 Record Deleted")
            End If
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_DELETE_FAIL, ex)
        End Try
    End Sub

    Public Sub Search(ByVal Adapter As IDatabaseAdapter, _
                           ByRef Obj As Object, ByVal Lock As Boolean?) Implements IDatabaseAccess.Search

        Dim StructObj As CJournalStruct = TryCast(Obj, CJournalStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("    [JournalId], ")
        SQL.Append("    [GroupId], ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Status], ")
        SQL.Append("    [ErrCode], ")
        SQL.Append("    [ErrDescription], ")
        SQL.Append("    [HostId], ")
        SQL.Append("    [TraceNo], ")
        SQL.Append("    [SystemDate], ")
        SQL.Append("    [BusinessDate], ")
        SQL.Append("    [UserId], ")
        SQL.Append("    [BranchId], ")
        SQL.Append("    [Supervisor], ")
        SQL.Append("    [Account], ")
        SQL.Append("    [Amount], ")
        SQL.Append("    [Currency], ")
        SQL.Append("    [Request], ")
        SQL.Append("    [Response], ")
        SQL.Append("    [Terminal], ")
        SQL.Append("    [ProcTime], ")
        SQL.Append("    [PageData], ")
        SQL.Append("    [OverrideId] ")
        SQL.Append(" FROM ")
        SQL.Append("     Journal ")
        If Lock Is Nothing Then
            SQL.Append(" WITH (NOLOCK) ")
        ElseIf Lock = True Then
            SQL.Append(" WITH (ROWLOCK) ")
        End If
        SQL.Append(" WHERE")
        SQL.Append("     [JournalId] = @JournalId ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("JournalId", StructObj.JournalId)

        Dim SQLAdapter As SqlClient.SqlDataAdapter = Adapter.Adapter
        SQLAdapter.SelectCommand = Command

        Dim Data As New DataSet
        Try
            SQLAdapter.Fill(Data)
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try

        Dim Row As Data.DataRowCollection = Data.Tables(0).Rows
        If Row.Count = 0 Then
            Throw New CBusinessException(CErrorCode.RECORD_NOT_FOUND, "Record Not Found")
        End If

        If Not IsDBNull(Row(0).Item(0)) Then StructObj.JournalId = Row(0).Item(0)
        If Not IsDBNull(Row(0).Item(1)) Then StructObj.GroupId = Row(0).Item(1)
        If Not IsDBNull(Row(0).Item(2)) Then StructObj.TxnCode = Row(0).Item(2)
        If Not IsDBNull(Row(0).Item(3)) Then StructObj.Status = Row(0).Item(3)
        If Not IsDBNull(Row(0).Item(4)) Then StructObj.ErrCode = Row(0).Item(4)
        If Not IsDBNull(Row(0).Item(5)) Then StructObj.ErrDescription = Row(0).Item(5)
        If Not IsDBNull(Row(0).Item(6)) Then StructObj.HostId = Row(0).Item(6)
        If Not IsDBNull(Row(0).Item(7)) Then StructObj.TraceNo = Row(0).Item(7)
        If Not IsDBNull(Row(0).Item(8)) Then StructObj.SystemDate = Row(0).Item(8)
        If Not IsDBNull(Row(0).Item(9)) Then StructObj.BusinessDate = Row(0).Item(9)
        If Not IsDBNull(Row(0).Item(10)) Then StructObj.UserId = Row(0).Item(10)
        If Not IsDBNull(Row(0).Item(11)) Then StructObj.BranchId = Row(0).Item(11)
        If Not IsDBNull(Row(0).Item(12)) Then StructObj.Supervisor = Row(0).Item(12)
        If Not IsDBNull(Row(0).Item(13)) Then StructObj.Account = Row(0).Item(13)
        If Not IsDBNull(Row(0).Item(14)) Then StructObj.Amount = Row(0).Item(14)
        If Not IsDBNull(Row(0).Item(15)) Then StructObj.Currency = Row(0).Item(15)
        If Not IsDBNull(Row(0).Item(16)) Then StructObj.Request = Row(0).Item(16)
        If Not IsDBNull(Row(0).Item(17)) Then StructObj.Response = Row(0).Item(17)
        If Not IsDBNull(Row(0).Item(18)) Then StructObj.Terminal = Row(0).Item(18)
        If Not IsDBNull(Row(0).Item(19)) Then StructObj.ProcTime = Row(0).Item(19)
        If Not IsDBNull(Row(0).Item(20)) Then StructObj.PageData = Row(0).Item(20)
        If Not IsDBNull(Row(0).Item(21)) Then StructObj.OverrideId = Row(0).Item(21)
    End Sub

    Public Sub SearchAll(ByVal Adapter As IDatabaseAdapter, _
                         ByRef DatabaseObj As List(Of Object)) Implements IDatabaseAccess.SearchAll

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("    [JournalId], ")
        SQL.Append("    [GroupId], ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Status], ")
        SQL.Append("    [ErrCode], ")
        SQL.Append("    [ErrDescription], ")
        SQL.Append("    [HostId], ")
        SQL.Append("    [TraceNo], ")
        SQL.Append("    [SystemDate], ")
        SQL.Append("    [BusinessDate], ")
        SQL.Append("    [UserId], ")
        SQL.Append("    [BranchId], ")
        SQL.Append("    [Supervisor], ")
        SQL.Append("    [Account], ")
        SQL.Append("    [Amount], ")
        SQL.Append("    [Currency], ")
        SQL.Append("    [Request], ")
        SQL.Append("    [Response], ")
        SQL.Append("    [Terminal], ")
        SQL.Append("    [ProcTime], ")
        SQL.Append("    [PageData], ")
        SQL.Append("    [OverrideId] ")
        SQL.Append(" FROM ")
        SQL.Append("     Journal ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString

        Dim SQLAdapter As SqlClient.SqlDataAdapter = Adapter.Adapter
        SQLAdapter.SelectCommand = Command

        Dim Data As New DataSet
        Try
            SQLAdapter.Fill(Data)
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try

        Dim Rows As Data.DataRowCollection = Data.Tables(0).Rows
        If Rows.Count = 0 Then
            Throw New CBusinessException(CErrorCode.RECORD_NOT_FOUND, "Record Not Found")
        End If

        For Each Row As DataRow In Rows
            Dim StructObj As New CJournalStruct
            If Not IsDBNull(Row.Item(0)) Then StructObj.JournalId = Row.Item(0)
            If Not IsDBNull(Row.Item(1)) Then StructObj.GroupId = Row.Item(1)
            If Not IsDBNull(Row.Item(2)) Then StructObj.TxnCode = Row.Item(2)
            If Not IsDBNull(Row.Item(3)) Then StructObj.Status = Row.Item(3)
            If Not IsDBNull(Row.Item(4)) Then StructObj.ErrCode = Row.Item(4)
            If Not IsDBNull(Row.Item(5)) Then StructObj.ErrDescription = Row.Item(5)
            If Not IsDBNull(Row.Item(6)) Then StructObj.HostId = Row.Item(6)
            If Not IsDBNull(Row.Item(7)) Then StructObj.TraceNo = Row.Item(7)
            If Not IsDBNull(Row.Item(8)) Then StructObj.SystemDate = Row.Item(8)
            If Not IsDBNull(Row.Item(9)) Then StructObj.BusinessDate = Row.Item(9)
            If Not IsDBNull(Row.Item(10)) Then StructObj.UserId = Row.Item(10)
            If Not IsDBNull(Row.Item(11)) Then StructObj.BranchId = Row.Item(11)
            If Not IsDBNull(Row.Item(12)) Then StructObj.Supervisor = Row.Item(12)
            If Not IsDBNull(Row.Item(13)) Then StructObj.Account = Row.Item(13)
            If Not IsDBNull(Row.Item(14)) Then StructObj.Amount = Row.Item(14)
            If Not IsDBNull(Row.Item(15)) Then StructObj.Currency = Row.Item(15)
            If Not IsDBNull(Row.Item(16)) Then StructObj.Request = Row.Item(16)
            If Not IsDBNull(Row.Item(17)) Then StructObj.Response = Row.Item(17)
            If Not IsDBNull(Row.Item(18)) Then StructObj.Terminal = Row.Item(18)
            If Not IsDBNull(Row.Item(19)) Then StructObj.ProcTime = Row.Item(19)
            If Not IsDBNull(Row.Item(20)) Then StructObj.PageData = Row.Item(20)
            If Not IsDBNull(Row.Item(21)) Then StructObj.OverrideId = Row.Item(21)
            DatabaseObj.Add(StructObj)
        Next
    End Sub

    Public Function Count(ByVal Adapter As IDatabaseAdapter) As Integer Implements IDatabaseAccess.Count

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("     COUNT(*) ")
        SQL.Append(" FROM ")
        SQL.Append("     Journal ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        
        Try
            Dim Counter As Integer = Command.ExecuteScalar()
            Return Count
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try
        
    End Function

    Public ReadOnly Property Name As String Implements IComponent.Name
        Get
            Return "SQLServer_Journal"
        End Get
    End Property

End Class

