''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CTxnParameter.vb
' Class         : CTxnParameter
' Description   : Table    TxnParameter
'               : Database SQLServer
'               : This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CTxnParameter.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow.CError

Public Class CTxnParameterSQLServer
    Inherits CTxnParameterStruct
    Implements IDatabaseAccess
    Implements IComponent

    Public Sub Insert(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Insert

        Dim StructObj As CTxnParameterStruct = TryCast(Obj, CTxnParameterStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" INSERT INTO TxnParameter ")
        SQL.Append("    ( ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Description], ")
        SQL.Append("    [Journalise], ")
        SQL.Append("    [Host], ")
        SQL.Append("    [IsReversal], ")
        SQL.Append("    [ReversalTxn], ")
        SQL.Append("    [TxnPath], ")
        SQL.Append("    [TxnIcon], ")
        SQL.Append("    [HostTxnCode]) ")
        SQL.Append(" VALUES ")
        SQL.Append("    ( ")
        SQL.Append("    @TxnCode, ")
        SQL.Append("    @Description, ")
        SQL.Append("    @Journalise, ")
        SQL.Append("    @Host, ")
        SQL.Append("    @IsReversal, ")
        SQL.Append("    @ReversalTxn, ")
        SQL.Append("    @TxnPath, ")
        SQL.Append("    @TxnIcon, ")
        SQL.Append("    @HostTxnCode) ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command()

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)
        Command.Parameters.AddWithValue("Description", StructObj.Description)
        Command.Parameters.AddWithValue("Journalise", StructObj.Journalise)
        Command.Parameters.AddWithValue("Host", StructObj.Host)
        Command.Parameters.AddWithValue("IsReversal", StructObj.IsReversal)
        Command.Parameters.AddWithValue("ReversalTxn", StructObj.ReversalTxn)
        Command.Parameters.AddWithValue("TxnPath", StructObj.TxnPath)
        Command.Parameters.AddWithValue("TxnIcon", StructObj.TxnIcon)
        Command.Parameters.AddWithValue("HostTxnCode", StructObj.HostTxnCode)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_INSERT_FAIL, "0 Record Inserted")
            End If
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_INSERT_FAIL, ex)
        End Try
    End Sub

    Public Sub Update(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Update

        Dim StructObj As CTxnParameterStruct = TryCast(Obj, CTxnParameterStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" UPDATE TxnParameter ")
        SQL.Append(" SET ")
        SQL.Append("     [Description] = @Description, ")
        SQL.Append("     [Journalise] = @Journalise, ")
        SQL.Append("     [Host] = @Host, ")
        SQL.Append("     [IsReversal] = @IsReversal, ")
        SQL.Append("     [ReversalTxn] = @ReversalTxn, ")
        SQL.Append("     [TxnPath] = @TxnPath, ")
        SQL.Append("     [TxnIcon] = @TxnIcon, ")
        SQL.Append("     [HostTxnCode] = @HostTxnCode ")
        SQL.Append(" WHERE ")
        SQL.Append("     [TxnCode] = @TxnCode ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command()

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)
        Command.Parameters.AddWithValue("Description", StructObj.Description)
        Command.Parameters.AddWithValue("Journalise", StructObj.Journalise)
        Command.Parameters.AddWithValue("Host", StructObj.Host)
        Command.Parameters.AddWithValue("IsReversal", StructObj.IsReversal)
        Command.Parameters.AddWithValue("ReversalTxn", StructObj.ReversalTxn)
        Command.Parameters.AddWithValue("TxnPath", StructObj.TxnPath)
        Command.Parameters.AddWithValue("TxnIcon", StructObj.TxnIcon)
        Command.Parameters.AddWithValue("HostTxnCode", StructObj.HostTxnCode)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, "0 Record Updated")
            End If
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, ex)
        End Try
    End Sub

    Public Sub Remove(ByVal Adapter As IDatabaseAdapter, ByRef Obj As Object) _
        Implements IDatabaseAccess.Remove

        Dim StructObj As CTxnParameterStruct = TryCast(Obj, CTxnParameterStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" DELETE FROM TxnParameter ")
        SQL.Append(" WHERE ")
        SQL.Append("     [TxnCode] = @TxnCode ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)

        Try
            Dim Counter As Integer = Command.ExecuteNonQuery()
            If Counter <> 1 Then
                Throw New CBusinessException(CErrorCode.DATABASE_UPDATE_FAIL, "0 Record Deleted")
            End If
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_DELETE_FAIL, ex)
        End Try
    End Sub

    Public Sub Search(ByVal Adapter As IDatabaseAdapter, _
                           ByRef Obj As Object, ByVal Lock As Boolean?) Implements IDatabaseAccess.Search

        Dim StructObj As CTxnParameterStruct = TryCast(Obj, CTxnParameterStruct)

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Description], ")
        SQL.Append("    [Journalise], ")
        SQL.Append("    [Host], ")
        SQL.Append("    [IsReversal], ")
        SQL.Append("    [ReversalTxn], ")
        SQL.Append("    [TxnPath], ")
        SQL.Append("    [TxnIcon], ")
        SQL.Append("    [HostTxnCode] ")
        SQL.Append(" FROM ")
        SQL.Append("     TxnParameter ")
        If Lock Is Nothing Then
            SQL.Append(" WITH (NOLOCK) ")
        ElseIf Lock = True Then
            SQL.Append(" WITH (ROWLOCK) ")
        End If
        SQL.Append(" WHERE")
        SQL.Append("     [TxnCode] = @TxnCode ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        Command.Parameters.AddWithValue("TxnCode", StructObj.TxnCode)

        Dim SQLAdapter As SqlClient.SqlDataAdapter = Adapter.Adapter
        SQLAdapter.SelectCommand = Command

        Dim Data As New DataSet
        Try
            SQLAdapter.Fill(Data)
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try

        Dim Row As Data.DataRowCollection = Data.Tables(0).Rows
        If Row.Count = 0 Then
            Throw New CBusinessException(CErrorCode.RECORD_NOT_FOUND, "Record Not Found")
        End If

        If Not IsDBNull(Row(0).Item(0)) Then StructObj.TxnCode = Row(0).Item(0)
        If Not IsDBNull(Row(0).Item(1)) Then StructObj.Description = Row(0).Item(1)
        If Not IsDBNull(Row(0).Item(2)) Then StructObj.Journalise = Row(0).Item(2)
        If Not IsDBNull(Row(0).Item(3)) Then StructObj.Host = Row(0).Item(3)
        If Not IsDBNull(Row(0).Item(4)) Then StructObj.IsReversal = Row(0).Item(4)
        If Not IsDBNull(Row(0).Item(5)) Then StructObj.ReversalTxn = Row(0).Item(5)
        If Not IsDBNull(Row(0).Item(6)) Then StructObj.TxnPath = Row(0).Item(6)
        If Not IsDBNull(Row(0).Item(7)) Then StructObj.TxnIcon = Row(0).Item(7)
        If Not IsDBNull(Row(0).Item(8)) Then StructObj.HostTxnCode = Row(0).Item(8)
    End Sub

    Public Sub SearchAll(ByVal Adapter As IDatabaseAdapter, _
                         ByRef DatabaseObj As List(Of Object)) Implements IDatabaseAccess.SearchAll

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("    [TxnCode], ")
        SQL.Append("    [Description], ")
        SQL.Append("    [Journalise], ")
        SQL.Append("    [Host], ")
        SQL.Append("    [IsReversal], ")
        SQL.Append("    [ReversalTxn], ")
        SQL.Append("    [TxnPath], ")
        SQL.Append("    [TxnIcon], ")
        SQL.Append("    [HostTxnCode] ")
        SQL.Append(" FROM ")
        SQL.Append("     TxnParameter ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString

        Dim SQLAdapter As SqlClient.SqlDataAdapter = Adapter.Adapter
        SQLAdapter.SelectCommand = Command

        Dim Data As New DataSet
        Try
            SQLAdapter.Fill(Data)
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try

        Dim Rows As Data.DataRowCollection = Data.Tables(0).Rows
        If Rows.Count = 0 Then
            Throw New CBusinessException(CErrorCode.RECORD_NOT_FOUND, "Record Not Found")
        End If

        For Each Row As DataRow In Rows
            Dim StructObj As New CTxnParameterStruct
            If Not IsDBNull(Row.Item(0)) Then StructObj.TxnCode = Row.Item(0)
            If Not IsDBNull(Row.Item(1)) Then StructObj.Description = Row.Item(1)
            If Not IsDBNull(Row.Item(2)) Then StructObj.Journalise = Row.Item(2)
            If Not IsDBNull(Row.Item(3)) Then StructObj.Host = Row.Item(3)
            If Not IsDBNull(Row.Item(4)) Then StructObj.IsReversal = Row.Item(4)
            If Not IsDBNull(Row.Item(5)) Then StructObj.ReversalTxn = Row.Item(5)
            If Not IsDBNull(Row.Item(6)) Then StructObj.TxnPath = Row.Item(6)
            If Not IsDBNull(Row.Item(7)) Then StructObj.TxnIcon = Row.Item(7)
            If Not IsDBNull(Row.Item(8)) Then StructObj.HostTxnCode = Row.Item(8)
            DatabaseObj.Add(StructObj)
        Next
    End Sub

    Public Function Count(ByVal Adapter As IDatabaseAdapter) As Integer Implements IDatabaseAccess.Count

        Dim SQL As New Text.StringBuilder
        SQL.Append(" SELECT ")
        SQL.Append("     COUNT(*) ")
        SQL.Append(" FROM ")
        SQL.Append("     TxnParameter ")

        Dim Command As SqlClient.SqlCommand = Adapter.Command

        Command.CommandType = CommandType.Text
        Command.CommandText = SQL.ToString
        
        Try
            Dim Counter As Integer = Command.ExecuteScalar()
            Return Count
        Catch ex As Exception
            CLog.Err(ex.Message)
            Throw New CBusinessException(CErrorCode.DATABASE_QUERY_FAIL, ex)
        End Try
        
    End Function

    Public ReadOnly Property Name As String Implements IComponent.Name
        Get
            Return "SQLServer_TxnParameter"
        End Get
    End Property

End Class

