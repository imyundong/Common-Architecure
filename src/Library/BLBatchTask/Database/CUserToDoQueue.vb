''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' File          : CUserToDoQueue.vb
' Class         : CUserToDoQueue
' Description   : Table : UserToDoQueue, This Class is Generated By DBCG Tools Automatically
' Author        : Su Jia
' Creation Ver  : 2.1.0.0
'
' Revision History
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Version       Date                 User
' $Log: CUserToDoQueue.vb,v $
' Revision 1.0  2012/08/24           Su Jia
' Initial Version
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports ServerPlatform.Library.Utility
Imports ServerPlatform.Library.Workflow

Public Class CUserToDoQueue
    Implements ICloneable
    Private Curser As New List(Of Object)

    Public Property QueueID As Integer
    Public Property DeviceID As Integer
    Public Property GroupID As Integer
    Public Property ID As Integer
    Public Property IDType As String

    Public Sub New()
        QueueID = 0
        DeviceID = 0
        GroupID = 0
        ID = 0
        IDType = ""
    End Sub

    Private Sub ToSqlPK(ByRef DBStruct As CUserToDoQueueStruct)
    End Sub

    Private Sub ToSql(ByRef DBStruct As CUserToDoQueueStruct)
        ToSqlPK(DBStruct)
        DBStruct.QueueID = QueueID
        DBStruct.DeviceID = DeviceID
        DBStruct.GroupID = GroupID
        DBStruct.ID = ID
        DBStruct.IDType = IDType
    End Sub

    Private Sub FromSql(ByVal DBStruct As CUserToDoQueueStruct)
        QueueID = DBStruct.QueueID
        DeviceID = DBStruct.DeviceID
        GroupID = DBStruct.GroupID
        ID = DBStruct.ID
        IDType = DBStruct.IDType
    End Sub

    Public Sub Insert(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CUserToDoQueueStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Insert(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Update(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CUserToDoQueueStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Remove(ByRef DatabaseFactory As CDatabaseFactory)
        Dim StructObj As New CUserToDoQueueStruct
        ToSql(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Update(DatabaseFactory.CreateInstance, StructObj)
    End Sub

    Public Sub Search(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal Lock As Boolean?)

        Dim StructObj As New CUserToDoQueueStruct
        ToSqlPK(StructObj)

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.Search(DatabaseFactory.CreateInstance, StructObj, Lock)
        FromSql(StructObj)
    End Sub

    Public Sub SearchAll(ByRef DatabaseFactory As CDatabaseFactory, ByRef ObjList As List(Of CUserToDoQueue))

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)

        Dim StructObjList As New List(Of Object)
        DBAccessClass.SearchAll(DatabaseFactory.CreateInstance, StructObjList)

        For Each StructObj As CUserToDoQueueStruct In StructObjList
            Dim Obj As New CUserToDoQueue
            Obj.FromSql(StructObj)
            ObjList.Add(Obj)
        Next
    End Sub


    Public Sub SearchByID(ByRef DatabaseFactory As CDatabaseFactory, _
                    ByVal ID As Integer, _
                    ByVal Index As Integer, ByVal Lock As Boolean?, Optional ByVal MaxRecord As Integer = 0)
        If Curser.Count > 0 Then
            If Index <= Curser.Count - 1 Then
                FromSql(Curser.Item(Index))
                Exit Sub
            Else
                Throw New CError.CBusinessException(CError.CErrorCode.RECORD_NOT_FOUND, "Index Out Of Range")
            End If
        End If

        Dim StructObj As New CUserToDoQueueStruct
        StructObj.ID = ID
        StructObj.MaxRecord = MaxRecord

        Dim DBAccessClass As Object = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        DBAccessClass.SearchByID(DatabaseFactory.CreateInstance, StructObj, Curser, Lock)

        FromSql(Curser.Item(Index))

    End Sub

    Public Function Count(ByRef DatabaseFactory As CDatabaseFactory) As Integer

        Dim StructObj As New CUserToDoQueueStruct

        Dim DBAccessClass As IDatabaseAccess = DatabaseFactory.GetDatabaseAccessLibrary(ClassName)
        Return DBAccessClass.Count(DatabaseFactory.CreateInstance)
    End Function

    Public ReadOnly Property ClassName As String
        Get
            Return "UserToDoQueue"
        End Get
    End Property

    Public Function Clone() As Object Implements ICloneable.Clone
        Dim UserToDoQueue As New CUserToDoQueue
        UserToDoQueue.QueueID = QueueID
        UserToDoQueue.DeviceID = DeviceID
        UserToDoQueue.GroupID = GroupID
        UserToDoQueue.ID = ID
        UserToDoQueue.IDType = IDType
        Return UserToDoQueue
    End Function



End Class

